<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACMAIwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6prN17XdK8P2RvNc1G00+2H/LS5lCAn0Gep9hXinx++O6+DLm
        Xw/4WWK414L+/uHG6O0yOBj+J8c4PA4znpXz14e8DfEP4v6kdTcXV3HIcNqWoyFYV56KT1A9EBx6CgD6
        N8UftN+CtKZ4tIiv9ZlHRoY/KiJ/3nwfyU15hrv7VniK4LDRNC0yxQ9DcO9ww/EFB+ldp4R/ZW0S0VJf
        FOsXeoTdTDaAQRD2JOWI9xtr1nQPhP4E0EL/AGf4X0zevSS4i89x77pNxoA+Qbj42fFPxDK0djqt1z/y
        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
        oKKKAP/Z
</value>
  </data>
</root>